import "https://raw.githubusercontent.com/AlexZangerle/csmba/main/pkls/events.pkl" as Events
import "https://raw.githubusercontent.com/AlexZangerle/csmba/main/pkls/variables.pkl" as Vars
import "https://raw.githubusercontent.com/CollaborativeStateMachines/Cirrina/refs/heads/develop/src/main/resources/pkl/csm/Csml.pkl"
// This module contains actions for the accessControlSM and securityManagerSM

// Raise to signify elevated security breach
aRaiseSecurityBreach = new Csml.RaiseActionDescription {
  event {
    name = Events.eSecurityBreachNotification
    channel = "global"
    data {
      new { name = "level"; value = "'Elevated'" }
      new { name = "details"; value = Vars.vAlertDetails }
    }
  }
}

// Raise to signify high security breach
aRaiseServereSecurityBreach = new Csml.RaiseActionDescription {
  event {
    name = Events.eSecurityBreachNotification
    channel = "global"
    data {
      new { name = "level"; value = "'High'" }
      new { name = "details"; value = Vars.vAlertDetails }
    }
  }
}

// Raise to start flashing lights
aRaiseFlashLights = new Csml.RaiseActionDescription { event { name = Events.eFlashAllLights; channel = "global" } }

// Raise to start the building alarm
aRaiseBuildingAlarm = new Csml.RaiseActionDescription { event { name = Events.eActivateBuildingAlarm; channel = "global" } }

// Raise to unlock evacuation routes
aRaiseUnlockEvacuationRoutes = new Csml.RaiseActionDescription { event { name = Events.eUnlockAllEvacuationRoutes; channel = "global" } }

// Raise if access was denied based on authentication
aRaiseAccessDeniedAuth = new Csml.RaiseActionDescription {
  event {
    name = Events.eAccessDenied
    channel = "global"
    data {
      new { name = "doorId"; value = Vars.vDoorId }
      new { name = "zoneId"; value = Vars.vZoneId }
      new { name = "user"; value = "'Unknown'" }
      new { name = "reason"; value = "'Authentication Failed'" }
    }
  }
}

// Raise if access was denied based on rule
aRaiseAccessDeniedRule = new Csml.RaiseActionDescription {
  event {
    name = Events.eAccessDenied
    channel = "global"
    data {
      new { name = "doorId"; value = Vars.vDoorId }
      new { name = "zoneId"; value = Vars.vZoneId }
      new { name = "user"; value = "'Unknown'" }
      new { name = "reason"; value = "'Authentication Failed'" }
    }
  }
}

// Raise if access was granted
aRaiseAccessGranted = new Csml.RaiseActionDescription {
  event {
    name = Events.eAccessGranted
    channel = "global"
    data {
      new { name = "doorId"; value = Vars.vDoorId }
      new { name = "zoneId"; value = Vars.vZoneId }
      new { name = "user"; value = Vars.vUserId }
      new { name = "role"; value = Vars.vUserRole }
    }
  }
}

// Raise to auto relock door
aRaiseAutoRelock = new Csml.RaiseActionDescription { event { name = "autoRelock"; channel = "internal" } }

// Raise to return to locked state
aRaiseReturnToLock = new Csml.RaiseActionDescription { event { name = "returnToLock"; channel = "internal" } }

// Raise to signify forced entry attempt
aRaiseForcedEntry = new Csml.RaiseActionDescription {
  event {
    name = Events.eForcedEntry
    channel = "global"
    data {
      new { name = "doorId"; value = Vars.vDoorId }
      new { name = "zone"; value = Vars.vZoneId }
    }
  }
}
