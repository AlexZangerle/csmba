import "https://raw.githubusercontent.com/CollaborativeStateMachines/Cirrina/refs/heads/develop/src/main/resources/pkl/csm/Csml.pkl"
import "https://raw.githubusercontent.com/AlexZangerle/csmba/main/pkls/events.pkl" as Events
import "https://raw.githubusercontent.com/AlexZangerle/csmba/main/pkls/serviceTypes.pkl" as ServiceTypes
import "https://raw.githubusercontent.com/AlexZangerle/csmba/main/pkls/variables.pkl" as Vars
import "https://raw.githubusercontent.com/AlexZangerle/csmba/main/pkls/lighting/guards.pkl" as Guards
import "https://raw.githubusercontent.com/AlexZangerle/csmba/main/pkls/lighting/context.pkl" as Context

// This module contains the definition for the lighting SM
// Integrates with Occupancy, Schedule, Energy Saving, and Security Alarms.

lightingSM = new Csml.StateMachineDescription {
  name = "lighting"
  localContext = Context.lightingContext
  states {
    new Csml.StateDescription {
      name = "init"
      initial = true
      always { new { target = "off" } }
    }

    new Csml.StateDescription {
      name = "off"
      entry { new Csml.InvokeActionDescription { serviceType = ServiceTypes.stTurnOff } }
      on {
        new {
          event = Events.eOccupancyDetected
          guards { Guards.energySavingInactive }
          target = "on"
        }
        new {
          event = Events.eOccupancyDetected
          guards { Guards.energySavingActive }
          target = "dim"
        }
        new {
          event = Events.eActivateLightUserLevel
          // --- FIX: Removed isMyZone guard --- (Assume event is targeted correctly)
          target = "userLevel"
        }
        new {
          event = Events.eZoneActive
          guards { Guards.isMyZone } // OK: This event carries zone data
          // Stay off, wait for occupancy trigger
        }
        new {
          event = Events.eAccessGranted
          guards { Guards.isMyZone } // OK: This event carries zone data
          target = "on"
        }
        new {
          event = Events.eZoneWarning
          guards { Guards.isMyZone } // OK: This event carries zone data
          // Stay off if already off
        }
        new {
          event = Events.eFlashAllLights
          // --- FIX: Removed isMyZone guard --- (Assume command is building-wide or targeted via topic)
          target = "flashingAlarm_Off"
        }
        new {
          event = Events.eActivateEnergySaving
          actions{ new Csml.AssignActionDescription { variable { name = Vars.vEnergySaving; value = "true" } } }
        }
        new {
          event = Events.eDeactivateEnergySaving
          actions{ new Csml.AssignActionDescription { variable { name = Vars.vEnergySaving; value = "false" } } }
        }
      }
    }

    new Csml.StateDescription {
      name = "on"
      entry { new Csml.InvokeActionDescription { serviceType = ServiceTypes.stTurnOn } }
      on {
        new { event = Events.eOccupancyTransient; target = "dim" }
        new { event = Events.eOccupancyVacant; target = "off" }
        new {
          event = Events.eActivateLightUserLevel
          // --- FIX: Removed isMyZone guard ---
          target = "userLevel"
        }
        new { event = Events.eZoneWarning; guards { Guards.isMyZone }; target = "dim" } // OK
        new { event = Events.eZoneInactive; guards { Guards.isMyZone }; target = "off" } // OK
        new {
          event = Events.eFlashAllLights
          // --- FIX: Removed isMyZone guard ---
          target = "flashingAlarm_Off"
        }
      }
    }

    new Csml.StateDescription {
      name = "dim"
      entry { new Csml.InvokeActionDescription { serviceType = ServiceTypes.stDim } }
      on {
        new { event = Events.eOccupancyDetected; guards { Guards.energySavingInactive }; target = "on" }
        new { event = Events.eOccupancyDetected; guards { Guards.energySavingActive } /* Stay dim */ }
        new { event = Events.eOccupancyVacant; target = "off" }
        new {
          event = Events.eActivateLightUserLevel
          // --- FIX: Removed isMyZone guard ---
          target = "userLevel"
        }
        new { event = Events.eZoneActive; guards { Guards.isMyZone }; target = "on" } // OK
        new { event = Events.eZoneInactive; guards { Guards.isMyZone }; target = "off" } // OK
        new {
          event = Events.eFlashAllLights
          // --- FIX: Removed isMyZone guard ---
          target = "flashingAlarm_Off"
        }
        new { event = Events.eActivateEnergySaving; actions{ new Csml.AssignActionDescription { variable { name = Vars.vEnergySaving; value = "true" } } } }
        new { event = Events.eDeactivateEnergySaving; actions{ new Csml.AssignActionDescription { variable { name = Vars.vEnergySaving; value = "false" } } } }
      }
    }

    new Csml.StateDescription {
      name = "userLevel"
      localContext = Context.lightingContext
      staticContext { variables{ Vars.vUserLightLevel } }
      entry {
        new Csml.AssignActionDescription {
          variable { name = Vars.vUserLightLevel.name; value = "if ($lightLevel != null && $lightLevel != -1) $lightLevel else lightLevel" }
        }
        new Csml.InvokeActionDescription {
          serviceType = ServiceTypes.stTurnUserLevel
          input { new { name = "lightLevel"; value = "lightLevel" } }
        }
      }
      on {
        new {
          event = Events.eDeactivateLightUserLevel
          // --- FIX: Removed isMyZone guard ---
          target = "off"
        }
        new { event = Events.eZoneWarning; guards { Guards.isMyZone }; target = "dim" } // OK
        new { event = Events.eZoneInactive; guards { Guards.isMyZone }; target = "off" } // OK
        new {
          event = Events.eFlashAllLights
          // --- FIX: Removed isMyZone guard ---
          target = "flashingAlarm_Off"
        }
      }
    }

    new Csml.StateDescription {
      name = "flashingAlarm_Off"
      entry { new Csml.InvokeActionDescription { serviceType = ServiceTypes.stTurnOff } }
      after { new Csml.TimeoutActionDescription { name = "flashOffPeriodTimer"; delay = "1000"; action = new Csml.RaiseActionDescription { event { name = "flashOn"; channel = "internal" } } } }
      on {
        new { event = "flashOn"; target = "flashingAlarm_On" }
        new {
          event = Events.eClearSecurityAlert
          // --- FIX: Removed isMyZone guard --- (Assume clear is building-wide or targeted via topic)
          target = "off"
        }
      }
    }

    new Csml.StateDescription {
      name = "flashingAlarm_On"
      entry { new Csml.InvokeActionDescription { serviceType = ServiceTypes.stTurnOn } }
      after { new Csml.TimeoutActionDescription { name = "flashOnPeriodTimer"; delay = "500"; action = new Csml.RaiseActionDescription { event { name = "flashOff"; channel = "internal" } } } }
      on {
        new { event = "flashOff"; target = "flashingAlarm_Off" }
        new {
          event = Events.eClearSecurityAlert
          // --- FIX: Removed isMyZone guard ---
          target = "off"
        }
      }
    }
  }
}

